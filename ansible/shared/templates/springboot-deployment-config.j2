apiVersion: v1
kind: DeploymentConfig
metadata:
  name: {{ app_name }}
  labels:
    app: {{ app_name }}
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        containerNames:
          - {{ app_name }}
        from:
          kind: ImageStreamTag
          name: '{{ app_name }}:latest'
  replicas: 1
  selector:
    app: {{ app_name }}
    deploymentconfig: {{ app_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
        deploymentconfig: {{ app_name }}
    spec:
      containers:
        - env:
            - name: spring_cloud_config_uri
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_uri
                  name: bootstrap-config
            - name: spring_cloud_config_failFast
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_failFast
                  name: bootstrap-config
            - name: spring_cloud_config_retry_initialInterval
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_retry_initialInterval
                  name: bootstrap-config
            - name: spring_cloud_config_retry_maxInterval
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_retry_maxInterval
                  name: bootstrap-config
            - name: spring_cloud_config_retry_maxAttempts
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_retry_maxAttempts
                  name: bootstrap-config
            - name: spring_cloud_config_retry_multiplier
              valueFrom:
                configMapKeyRef:
                  key: spring_cloud_config_retry_multiplier
                  name: bootstrap-config
            - name: CERTIFICATE_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  key: CERTIFICATE_SERVICE_HOST
                  name: bootstrap-config
            - name: CERTIFICATE_COMMON_NAME
              value: {{ app_name }}-itweb.americancentury.com
          name: {{ app_name }}
          image: {{ app_name }}
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
          resources: 
            requests: 
              cpu: {{ min_cpu }}
              memory: {{ min_memory }}
            limits:
              cpu: {{ max_cpu }}
              memory: {{ max_memory }}
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 2
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - >-
                  STATUS=$(curl --insecure --silent http://$HOSTNAME:8081/health
                  | jq -r '.["status"]')
                  
                  if [ "$STATUS" == "UP" ]

                  then
                          exit 0;
                  else
                          exit 1;
                  fi                    
            initialDelaySeconds: 240
            timeoutSeconds: 2
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 2
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}