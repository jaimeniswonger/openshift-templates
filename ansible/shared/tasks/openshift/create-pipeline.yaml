---
- name: Check for existence of pipeline labeled app={{ app_name }} and env={{ environment }}
  action: command oc get all -l app={{ app_name }}, env={{ environment }} -o name --ignore-not-found -n {{ openshift_ci_cd_project_name }}
  register: pipeline_check_result
  
#- debug: var=pipeline_check_result

- name: Create {{ app_name }}-{{ openshift_project_name }}-pipeline json from template
  template:
    src: "shared/templates/springboot-{{ environment }}-pipeline.j2"
    dest: "{{ mktemp.stdout }}/{{ app_name }}-{{ openshift_project_name }}-pipeline.yaml"
  changed_when: no
  when: pipeline_check_result.stdout == ""

- name: Install {{ app_name }}-{{ openshift_project_name }}-pipeline 
  action: command bash -c "oc process -f {{ mktemp.stdout }}/{{ app_name }}-{{ openshift_project_name }}-pipeline.yaml | oc create -f - -n {{ openshift_ci_cd_project_name }}"
  when: pipeline_check_result.stdout == ""