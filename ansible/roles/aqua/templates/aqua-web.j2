# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}-web
  labels:
    app: {{ app_name }}
    template: {{ app_name }}-web
spec:
  ports:
    - port: 8080
  selector:
    app: {{ app_name }}-web
  type: LoadBalancer

---
# ROUTE
apiVersion: v1
kind: Route
metadata:
  name: {{ app_name }}-web
  labels:
    app: {{ app_name }}
    template: {{ app_name }}-web
spec:
  host: {{ route_host }}
  to:
    kind: Service
    name: {{ app_name }}-web

---
# DEPLOYMENT
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ app_name }}-web
  labels:
    app: {{ app_name }}
    template: {{ app_name }}-web
spec:
  template:
    metadata:
      labels:
        app: {{ app_name }}
        template: {{ app_name }}-web
      name: {{ app_name }}-web
    spec:
      serviceAccount: {{ app_name }}-account
      imagePullSecrets:
        - name: dockerhub
      containers:
      - name: {{ app_name }}-web
        image: {{ aqua_web_image }}
        securityContext:
          privileged: true
        env:
          - name: SCALOCK_DBUSER
            value: "postgres"
          - name: SCALOCK_DBPASSWORD
            value: "password"
          - name: SCALOCK_DBNAME
            value: "scalock"
          - name: SCALOCK_DBHOST
            value: {{ app_name }}-db.{{ openshift_project_name }}.svc
          - name: SCALOCK_DBPORT
            value: "5432"
          - name: SCALOCK_AUDIT_DBUSER
            value: "postgres"
          - name: SCALOCK_AUDIT_DBPASSWORD
            value: "password"
          - name: SCALOCK_AUDIT_DBNAME
            value: "slk_audit"
          - name: SCALOCK_AUDIT_DBHOST
            value: {{ app_name }}-db.{{ openshift_project_name }}.svc
          - name: SCALOCK_AUDIT_DBPORT
            value: "5432"
          - name: LICENSE_TOKEN
            value: {{ aqua_license_token }}
          - name: ADMIN_PASSWORD
            value: {{ aqua_admin_password }}
        volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-socket-mount
        ports:
        - containerPort: 8080
      volumes:
        - name: docker-socket-mount
          hostPath:
            path: /var/run/docker.sock
