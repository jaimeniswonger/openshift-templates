apiVersion: v1
kind: Template
metadata:
  name: {{ openshift_project_name }}
  annotations:
    description: A template for creating {{ openshift_project_name }} pipelines 
    iconClass: icon-jenkins
    tags: pipeline, jenkins, git, keyhole
objects:
# BUILD CONFIG
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: {{ app_name }}-{{ openshift_project_name }}
    labels:
      app: {{ app_name }}
      env: {{ openshift_project_name }}
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: >
          pipeline {
            agent { node { label 'keyhole' } }
            stages {
   
              stage('Verifying Quality') {
                steps {
                  script {
                    def quality = sh(
                                    script: "curl -s -X GET \
                                      http://sonarqube.keyhole.institute/api/qualitygates/project_status?projectKey=com.keyholesoftware:khs-employee-service | jq -r '.projectStatus.status'",
                                    returnStdout: true
                                  ).trim()
                    sh("echo ${quality}")

                    if (quality != "OK") {
                      sh("exit 1")
                    }
                  }
                }
              }
              stage('Promoting Image') {
                steps {
                  // Check quality analysis here?
                  openshiftTag(namespace: '{{ openshift_promote_from_project_name }}', srcStream: '{{ app_name }}', srcTag: 'latest', destinationNamespace: '{{ openshift_project_name }}', destStream: '{{ app_name }}', destTag: '{{ openshift_project_name }}')
                }
              }

              stage('Deploying Application') {
                steps {
                  openshiftDeploy(namespace: '{{ openshift_project_name }}', depCfg: '{{ app_name }}')
                }
              }
            }
          }
      type: JenkinsPipeline
    triggers:
      - type: Generic
        generic:
          secret: {{ app_name }}-{{ openshift_project_name }}