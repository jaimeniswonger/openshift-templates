apiVersion: v1
kind: Template
metadata:
  name: spring-boot-development
  labels:
    env: dev
  annotations:
    description: A Template for deploying Spring Boot applications to the Development Environment
    iconClass: icon-spring
    tags: spring-boot, spring-cloud, itweb, development
    openshift.io/display-name: ITWEB - Spring Boot (Development)
objects:
# IMAGE STREAM
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
    creationTimestamp: null
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}-builder
    labels:
      app: ${APP_NAME}
    creationTimestamp: null
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: openjdk
  spec:
    tags:
    - from:
        kind: DockerImage
        name: openjdk:8-jre-alpine
      name: 8-jre-alpine
      referencePolicy:
        type: Source
# BUILD CONFIG
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-builder
    labels:
      app: ${APP_NAME}
  spec:
    source:
      type: Git
      git:
        uri: ${GIT_URL}
        ref: ${GIT_REF}
      sourceSecret:
        name: ${GIT_SECRET}
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: springboot-s2i:latest
          namespace: dev-poc
        env:
          - name: NEXUS_HOST
            value: http://nexus3.ci-cd.svc:8081
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-builder:latest
    triggers:
    - type: ConfigChange
    - type: ImageChange 
      imageChange: {}
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      type: Dockerfile
      dockerfile: |
        FROM openjdk:8-jre-alpine
        COPY application.jar /
        CMD java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar /application.jar
      images:
      - from:
          kind: ImageStreamTag
          name: ${APP_NAME}-builder:latest
        paths:
        - destinationDir: .
          sourcePath: /opt/app-root/src/application.jar
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: openjdk:8-jre-alpine
# DEPLOYMENT CONFIG
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          containerNames:
            - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: '${APP_NAME}:latest'
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
          - env:
              - name: spring_cloud_config_uri
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_uri
                    name: bootstrap-config
              - name: spring_cloud_config_failFast
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_failFast
                    name: bootstrap-config
              - name: spring_cloud_config_retry_initialInterval
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_retry_initialInterval
                    name: bootstrap-config
              - name: spring_cloud_config_retry_maxInterval
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_retry_maxInterval
                    name: bootstrap-config
              - name: spring_cloud_config_retry_maxAttempts
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_retry_maxAttempts
                    name: bootstrap-config
              - name: spring_cloud_config_retry_multiplier
                valueFrom:
                  configMapKeyRef:
                    key: spring_cloud_config_retry_multiplier
                    name: bootstrap-config          
            name: ${APP_NAME}
            image: ${APP_NAME}
            ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8081
                protocol: TCP
            resources: 
              requests: 
                cpu: ${MIN_CPU}
                memory: ${MIN_MEM}
              limits:
                cpu: ${MAX_CPU}
                memory: ${MAX_MEM}
            readinessProbe:
              httpGet:
                path: /health
                port: 8081
                scheme: HTTP
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
  status: {}
# SERVICE CONFIG
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: 8081-tcp
        protocol: TCP
        port: 8081
        targetPort: 8081
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
# PARAMETERS    
parameters:
- description: The name of the new application
  displayName: Application Name
  name: APP_NAME
  required: true
- description: The URL of the Git repository
  displayName: Git URL
  name: GIT_URL
  required: true
- description: The Git branch/tag reference
  displayName: Git branch/tag reference
  name: GIT_REF
  value: master
  required: true
- description: The secret containing Git credentials
  displayName: Git Credentials Secret
  name: GIT_SECRET
  value: git-secret
  required: true
- description: Generic build Trigger Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_TRIGGER_SECRET
- description: The hostname for the route
  displayName: Route Host
  name: ROUTE_HOST
  required: false
- description: Java options
  displayName: Java options
  name: JAVA_OPTS
  value:
  required: false    
- description: Minimum CPU
  displayName: Minimum CPU
  name: MIN_CPU
  value: 100m
  required: true    
- description: Minimum Memory
  displayName: Minimum Memory
  name: MIN_MEM
  value: 128Mi
  required: true    
- description: Maximum CPU
  displayName: Maximum CPU
  name: MAX_CPU
  value: 200m
  required: true    
- description: Maximum Memory
  displayName: Maximum Memory
  name: MAX_MEM
  value: 256Mi
  required: true    