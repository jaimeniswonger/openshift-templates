apiVersion: v1
kind: Template
metadata:
  name: spring-boot-promoted
  labels:
    env: promoted
  annotations:
    description: A Template for deploying Spring Boot applications to a Promoted Environment
    iconClass: icon-spring
    tags: spring-boot, spring-cloud, itweb, promoted
    openshift.io/display-name: ITWEB - Spring Boot (Promoted)
objects:
# DEPLOYMENT CONFIG
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: spring_cloud_config_uri
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_uri
                name: bootstrap-config
          - name: spring_cloud_config_failFast
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_failFast
                name: bootstrap-config
          - name: spring_cloud_config_retry_initialInterval
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_retry_initialInterval
                name: bootstrap-config
          - name: spring_cloud_config_retry_maxInterval
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_retry_maxInterval
                name: bootstrap-config
          - name: spring_cloud_config_retry_maxAttempts
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_retry_maxAttempts
                name: bootstrap-config
          - name: spring_cloud_config_retry_multiplier
            valueFrom:
              configMapKeyRef:
                key: spring_cloud_config_retry_multiplier
                name: bootstrap-config
          - name: spring_profiles_active
            value: ${ACTIVE_PROFILE}
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: 
              requests: 
                cpu: ${MIN_CPU}
                memory: ${MIN_MEM}
              limits:
                cpu: ${MAX_CPU}
                memory: ${MAX_MEM}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:${ENV}
          namespace: ${ENV}-poc
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
# IMAGE STREAM    
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec: {}
  status:
    dockerImageRepository: ""
# SERVICE    
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# PARAMETERS    
parameters:
- description: The name of the new application
  displayName: Application Name
  name: APP_NAME
  required: true 
- description: The name of the environment (i.e. qa)
  displayName: Environment name
  name: ENV
  value: qa
  required: true
- description: The active profile
  displayName: Active Profile
  name: ACTIVE_PROFILE
  value: qa
  required: true
- description: Minimum CPU
  displayName: Minimum CPU
  name: MIN_CPU
  value: 100m
  required: true    
- description: Minimum Memory
  displayName: Minimum Memory
  name: MIN_MEM
  value: 128Mi
  required: true    
- description: Maximum CPU
  displayName: Maximum CPU
  name: MAX_CPU
  value: 200m
  required: true    
- description: Maximum Memory
  displayName: Maximum Memory
  name: MAX_MEM
  value: 256Mi
  required: true    