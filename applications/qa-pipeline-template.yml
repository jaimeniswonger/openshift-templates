apiVersion: v1
kind: Template
metadata:
  name: qa-pipeline
  annotations:
    description: A template for creating QA pipelines for ITWEB
    iconClass: icon-jenkins
    tags: pipeline, jenkins, git, itweb
objects:
# BUILD CONFIG
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}-pipeline-qa
    labels:
      app: ${APP_NAME}
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: "node() {\r\n  stage('Tag Image') {\r\n\t// Check quality analysis here?\r\n\topenshiftTag(namespace: '${DEV_NAMESPACE}', srcStream: '${APP_NAME}', srcTag: 'latest', destinationNamespace: '${QA_NAMESPACE}', destStream: '${APP_NAME}', destTag: 'qa')\r\n  }\r\n\r\n  stage('Deploy') {\r\n    openshiftDeploy(namespace: 'qa-poc', deploymentConfig: '${APP_NAME}')  \r\n  }\r\n  \r\n  stage('UFT...') {\r\n  \t// kickoff uft tests\r\n  }\r\n}\r\n"
      type: JenkinsPipeline
    triggers:
      - generic:
          secret: ${APP_NAME}-qa
        type: Generic
# PARAMETERS
parameters:
- description: The name of the new application
  displayName: Application Name
  name: APP_NAME
  required: true
- description: The name of the DEV namespace
  displayName: Dev Name Space
  name: DEV_NAMESPACE
  value: dev-poc
  required: true
- description: The name of the QA namespace
  displayName: QA Name Space
  name: QA_NAMESPACE
  value: qa-poc
  required: true